# ==================
# Documentation
# ==================
snippet annotate
/**
 * ${1:description}
 *
 * @param  {${2:type}} ${3:name} ${4:description}
 *
 * @return {${5:type}} ${0:description}
 */
endsnippet

snippet @par
	@param {${1:type}} ${2:name} ${0:description}
endsnippet



# ==================
# Functions
# ==================
snippet fun
function (${1}) {
	${0}
}
endsnippet

snippet fn
(${1}) => {
	${0}
}
endsnippet

snippet cfn
const ${1:function_name} = (${2}) => {
	${0}
};
endsnippet

snippet (fn
(function (${1}) {
	${0}
}(${2}));
endsnippet

snippet timeout
setTimeout(function () {${0}}${2}, ${1:10});
endsnippet



# ==================
# Flow control
# ==================
snippet if
if (${1:true}) {
	${0}
}
endsnippet

snippet ife
if (${1:true}) {
	${2}
} else {
	${0}
}
endsnippet

snippet ter
${1:/* condition */} ? ${2:/* if true */} : ${0:/* if false */}
endsnippet

snippet switch
switch (${1:expression}) {
	case '${3:case}':
		${4}
		break;
	${0}
	default:
		${2}
}
endsnippet

snippet case
case '${1:case}':
	${2}
	break;
${0}
endsnippet

snippet ret
return ${0:result};
endsnippet



# ==================
# Loops
# ==================
snippet for
for (let ${2:i} = 0, l = ${1:arr}.length; $2 < l; $2++) {
	const ${3:v} = $1[$2];${0:}
	// continue
	// break
	// break jump // 跳出多层 for 循环
}
endsnippet

snippet forr
for (let ${2:i} = ${1:arr}.length - 1; $2 >= 0; $2--) {
	const ${3:v} = $1[$2];${0:}
	// continue
	// break
	// break jump // 跳出多层 for 循环
}
endsnippet

snippet wh
while (${1:/* condition */}) {
	${0}
}
endsnippet

snippet do
do {
	${0}
} while (${1:/* condition */});
endsnippet

snippet fori
for (var ${1:prop} in ${2:object}) {
	${0:$2[$1]}
}
endsnippet



# ==================
# Objects
# ==================
snippet :f
${1:method_name}: (${2:attribute}) => {
	${3}
},
endsnippet



# ==================
# JSON
# ==================
snippet jsonp
JSON.parse(${0:jstr});
endsnippet

snippet jsons
JSON.stringify(${0:object});
endsnippet



# ==================
# DOM selectors
# ==================
snippet get
getElementsBy${1:TagName}('${0}')
endsnippet

snippet gett
getElementBy${1:Id}('${0}')
endsnippet



# ==================
# Debug
# ==================
snippet console
console.log('${1} =', ${0});
endsnippet



# ==================
# Misc
# ==================
snippet us
'use strict';
endsnippet
