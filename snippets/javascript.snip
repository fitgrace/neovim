# ==================
# Documentation
# ==================
# docstring
snippet /**
	/**
	 * ${0:description}
	 *
	 */
snippet @par
	@param {${1:type}} ${2:name} ${0:description}
snippet @ret
	@return {${1:type}} ${0:description}


# ==================
# Functions
# ==================
# prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} = function(${3}) {
		${0}
	};
# Function
snippet fun
	function ${1:function_name}(${2}) {
		${0}
	}
# Anonymous Function
snippet fn
	function (${1}) {
		${0}
	}
# Anonymous Function assigned to variable
snippet vfun
	var ${1:function_name} = function (${2}) {
		${0}
	};
# Function assigned to variable
snippet vfn
	var ${1:function_name} = function $1 (${2}) {
		${0}
	};
# Immediate function
snippet (fn
	(function (${1}) {
		${0}
	}(${2}));
# setTimeout function
snippet timeout
	setTimeout(function () {${0}}${2}, ${1:10});



# ==================
# Flow control
# ==================
# if
snippet if
	if (${1:true}) {
		${0}
	}
# if ... else
snippet ife
	if (${1:true}) {
		${2}
	} else {
		${0}
	}
# tertiary conditional
snippet ter
	${1:/* condition */} ? ${2:/* if true */} : ${0:/* if false */}
# switch
snippet switch
	switch (${1:expression}) {
		case '${3:case}':
			${4}
			break;
		${0}
		default:
			${2}
	}
# case
snippet case
	case '${1:case}':
		${2}
		break;
	${0}
# return
snippet ret
	return ${0:result};



# ==================
# Loops
# ==================
# for loop
snippet for
	for (var ${2:i} = 0, l = ${1:arr}.length; $2 < l; $2++) {
		var ${3:v} = $1[$2];${0:}
	}
# Reversed for loop
snippet forr
	for (var ${2:i} = ${1:arr}.length - 1; $2 >= 0; $2--) {
		var ${3:v} = $1[$2];${0:}
	}
# While loop
snippet wh
	while (${1:/* condition */}) {
		${0}
	}
# Do while loop
snippet do
	do {
		${0}
	} while (${1:/* condition */});
# For in loop
snippet fori
	for (var ${1:prop} in ${2:object}) {
		${0:$2[$1]}
	}



# ==================
# Objects
# ==================
# Object Method
snippet :f
	${1:method_name}: function (${2:attribute}) {
		${3}
	},



# ==================
# JSON
# ==================
# JSON.parse
snippet jsonp
	JSON.parse(${0:jstr});
# JSON.stringify
snippet jsons
	JSON.stringify(${0:object});



# ==================
# DOM selectors
# ==================
# Get elements
snippet get
	getElementsBy${1:TagName}('${0}')
# Get element
snippet gett
	getElementBy${1:Id}('${0}')
# Elements by class



# ==================
# Debug
# ==================
# console.log
snippet cl
	console.log(${0});



# ==================
# Misc
# ==================
# 'use strict';
snippet us
	'use strict';
